<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:task="http://www.springframework.org/schema/task"
       xmlns:cache="http://www.springframework.org/schema/cache"

       xsi:schemaLocation="
       http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/util
       http://www.springframework.org/schema/util/spring-util.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/task
       http://www.springframework.org/schema/task/spring-task.xsd>
       http://www.springframework.org/schema/cache
       http://www.springframework.org/schema/cache/spring-cache.xsd">

    <!--读取MySQL数据库配置文件-->
    <bean id="sqlPropertyConfigurer" class="org.springframework.beans.factory.config.PreferencesPlaceholderConfigurer">
        <property name="location" value="classpath:db.properties"></property>
        <property name="fileEncoding" value="UTF-8"></property>
    </bean>

    <!-- 扫描器 -->
    <context:component-scan base-package="org.spoto.service.impl"></context:component-scan>

    <!-- MyBatis 相关配置 Start -->
    <!-- 配置数据库源（数据库连接池） -->
    <!-- init-method：初始化时的方法，Spring启动时调用该方法建立几条数据库连接； destroy-method：销毁时的方法，当Spring类销毁时会调用该方法释放数据库连接池的连接-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <!--调用db.properties配置文件中的参数并注入到属性中-->
        <property name="driverClassName" value="${jdbc.mysql.driverClassName}"/>
        <property name="url" value="${jdbc.mysql.url}"/>
        <property name="username" value="${jdbc.mysql.username}"/>
        <property name="password" value="${jdbc.mysql.password}"/>
    </bean>

    <!-- SqlSessionFactory -->
    <bean id="SqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 数据库连接池 -->
        <property name="dataSource" ref="dataSource"/>
        <!-- 加载MyBatis的全局配置文件 -->
        <property name="mapperLocations" value="classpath:org/spoto/dao/*Mapper.xml"/>
    </bean>
    <!-- Mapper扫描器 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- 扫描包路径，如果需要扫描多个包，中间使用半角逗号隔开 -->
        <!-- 对**.dao包内进行扫描 -->
        <property name="basePackage" value="org.spoto.dao"/>
    </bean>
    <!-- MyBatis 相关配置 Ends -->


    <!-- 事务管理注解相关配置 Start -->
    <!-- 事务管理器，对MyBatis操作数据库事务控制，Spring使用jdbc的事务控制类 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
          scope="singleton">
        <!-- 数据源dataSource在applicationContext.xml-mybatis.xml中配置了 -->
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <!-- 注解的事务管理 @Transactional -->
    <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>
    <!-- 事务管理注解相关配置 Ends -->
</beans>